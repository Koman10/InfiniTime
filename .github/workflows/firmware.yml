name: Build firmware (Guardian Beacon)

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
    paths-ignore:
      - ".github/workflows/docker.yml"
      - "README.md"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Show tree (debug)
        run: |
          echo "== Git submodules =="
          git submodule status || true
          echo "== Root directory =="
          ls -la
          echo "== SRC directory =="
          ls -la src || true

      - name: Build with our Docker image
        run: |
          docker run --rm \
            -v "${{ github.workspace }}:/src" \
            ghcr.io/koman10/guardian-beacon:latest \
            /bin/sh -c "
              set -eux
              cd /src

              echo '== Building firmware inside container =='

              # Jeśli repo to fork InfiniTime – użyj ich skryptu
              if [ -x scripts/build.sh ]; then
                /bin/sh scripts/build.sh -t pinetime -r
              else
                # Fallback: klasyczny CMake/Ninja
                cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release -DTARGET_DEVICE=PINETIME
                cmake --build build -j\$(nproc)
              fi

              echo '== Build output =='
              ls -lh build || true
              ls -lh build/*.bin build/*.hex build/*.zip 2>/dev/null || true
            "

      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: guardian-firmware
          path: |
            build/*.bin
            build/*.hex
            build/*.zip
            build/*.out
          if-no-files-found: warn
